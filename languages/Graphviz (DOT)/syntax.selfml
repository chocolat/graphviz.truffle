(root source.dot
    (zone
        (match
            (regex [ ?(digraph)[ \t]+([A-Za-z0-9]+) ?(\{)]
                (4 punctuation.section.dot)
                (1 storage.type.dot)
                (2 variable.other.dot))))
    (zone keyword.operator.dot
        (match
            (regex [(<|-)(>|-)])))
    (zone storage.type.dot
        (match
            (list node edge graph digraph subgraph strict)
            (boundary.both)))
    (zone support.constant.attribute.node.dot
        (match
            (list bottomlabel color comment distortion fillcolor fixedsize fontcolor fontname fontsize group height label layer orientation peripheries regular shape shapefile sides skew style toplabel URL width z)
            (boundary.both)))
    (zone support.constant.attribute.edge.dot
        (match
            (list arrowhead arrowsize arrowtail color comment constraint decorate dir fontcolor fontname fontsize headlabel headport headURL label labelangle labeldistance labelfloat labelcolor labelfontname labelfontsize layer lhead ltail minlen samehead sametail splines style taillabel tailport tailURL weight)
            (boundary.both)))
    (zone support.constant.attribute.graph.dot
        (match
            (list bgcolor center clusterrank color comment compound concentrate fillcolor fontname fontpath fontsize label labeljust labelloc layers margin mclimit nodesep nslimit nslimit1 ordering orientation page pagedir quantum rank rankdir ranksep ratio remincross rotate samplepoints searchsize size style URL)
            (boundary.both)))
    (zone variable.other.dot
        (match
            (list box polygon ellipse circle point egg triangle plaintext diamond trapezium parallelogram house pentagon hexagon septagon octagon doublecircle doubleoctagon tripleoctagon invtriangle invtrapezium invhouse Mdiamond Msquare Mcircle rect rectangle none note tab folder box3d component max min same)
            (boundary.both)))
    (zone string.quoted.double.dot
        (start
            (regex "
                (0 punctuation.definition.string.begin.dot)))
        (end
            (regex "
                (0 punctuation.definition.string.end.dot)))
        (subzones
            (zone constant.character.escape.dot
                (match
                    (regex \\.)))))
    (zone comment.line.double-slash.dot
        (match
            (regex [(//).*$\n?]
                (1 punctuation.definition.comment.dot))))
    (zone comment.line.number-sign.dot
        (match
            (regex [(#).*$\n?]
                (1 punctuation.definition.comment.dot))))
    (zone comment.block.dot
        (start
            (regex /\*
                (0 punctuation.definition.comment.dot)))
        (end
            (regex \*/
                (0 punctuation.definition.comment.dot)))))